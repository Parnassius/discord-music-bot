[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
strict = true

show_error_codes = true
warn_unreachable = true


[tool.poe.tasks]
ruff-fix = "ruff discord_music_bot --fix-only --exit-zero"
black = "black discord_music_bot"
format = ["ruff-fix", "black"]

mypy = "mypy discord_music_bot"
ruff = "ruff discord_music_bot"
all = ["format", "mypy", "ruff"]


[tool.poetry]
name = "discord-music-bot"
version = "0.1.0"
description = ""
authors = ["Parnassius <Parnassius@users.noreply.github.com>"]

[tool.poetry.dependencies]
python = "^3.11"
discord-py = "2.3.2"
typenv = "0.2.0"
wavelink = "3.0.0"

[tool.poetry.group.dev.dependencies]
black = "23.11.0"
mypy = "1.7.1"
poethepoet = "0.24.4"
ruff = "0.1.6"

[tool.poetry.scripts]
discord-music-bot = "discord_music_bot.__main__:main"


[tool.ruff]
target-version = "py311"
select = [
    "A",     # flake8-builtins
    "ARG",   # flake8-unused-arguments
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle
    "EM",    # flake8-errmsg
    "F",     # pyflakes
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "ISC",   # flake8-implicit-str-concat
    "N",     # pep8-naming
    "PGH",   # pygrep-hooks
    "PTH",   # flake8-use-pathlib
    "RET",   # flake8-return
    "RUF",   # Ruff-specific rules
    "T10",   # flake8-debugger
    "TID",   # flake8-tidy-imports
    "TRY",   # tryceratops
    "UP",    # pyupgrade
    "W",     # pycodestyle
    "YTT",   # flake8-2020
]
fixable = [
    "I",     # isort
    "F401",  # unused-import
    "TID",   # flake8-tidy-imports
    "UP",    # pyupgrade
]
dummy-variable-rgx = "^_$"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]
split-on-trailing-comma = false
